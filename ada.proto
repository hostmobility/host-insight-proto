// Copyright (C) 2023  Host Mobility AB

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.

syntax = "proto3";

package ada;

import public "ada_enums.proto";

service Ada {
  rpc HeartBeat (Status) returns (Reply);
  rpc SendCurrentState (State) returns (Reply);
  rpc SendValues (Values) returns (Reply);
  rpc SendPosition (Point) returns (Reply);
  rpc SendCanMessage (CanMessage) returns (Reply);
  rpc SendCanMessageStream (stream CanMessage) returns (Reply);
}

message Status {
  StatusCode code = 1;
}

message State {
  string sw_version = 1;
  string config_md5sum = 2;
  optional string dbc_md5sum = 3;
}

message Values {
  repeated Value measurements = 1;
}

message Value {
  string name = 1;
  int32 value = 2;
}

message CarryOn {
  // Empty for now by design. Might add fields later
}

message SoftwareUpdate {
  string version = 1;
}

message ConfigUpdate {
  bytes config = 1;
}

message IdentityUpdate {
  string id = 1;
  string url = 2;
}

message FetchResource {
  string url = 1;
  optional string target_location = 2;
}

message ControlRequest {
// Empty for now by design. Might add fields later
}

message Exit {
  int32 reason = 1;
}

message Reply {
  oneof action{
    CarryOn carry_on_msg = 1;
    SoftwareUpdate sw_update_msg = 2;
    ConfigUpdate config_update_msg = 3;
    IdentityUpdate identity_update_msg = 4;
    FetchResource fetch_resource_msg = 5;
    ControlRequest control_request_msg = 6;
    Exit exit_msg = 7;
  }
}

message Point {
  double longitude = 1;
  double latitude = 2;
}
message CanMessage {
  string bus = 1;
  optional uint64 time_stamp = 2;
  repeated CanSignal signal = 3;
}

message CanSignal {
  string signal_name = 1;
  string unit = 2;
  oneof value
  {
    bool val_bool = 3;
    double val_f64 = 4;
    int64 val_i64 = 5;
    uint64 val_u64 = 6;
    string val_str  = 7;
  }
}
